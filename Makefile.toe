#
#  OCTEON TOOLKITS                                                         
#  Copyright (c) 2007 Cavium Networks. All rights reserved.
#
#  This file, which is part of the OCTEON TOOLKIT from Cavium Networks,
#  contains proprietary and confidential information of Cavium Networks
#  and in some cases its suppliers.
#
#  Any licensed reproduction, distribution, modification, or other use of
#  this file or confidential information embodied in this file is subject
#  to your license agreement with Cavium Networks. The applicable license
#  terms can be found by contacting Cavium Networks or the appropriate
#  representative within your company.
#
#  All other use and disclosure is prohibited.
#
#  Contact Cavium Networks at info@caviumnetworks.com for more information.
#

#
#  application Makefile
#
#  $Id: Makefile.toe 27533 2007-08-24 21:37:11Z fmasood $ $Name$
#
#    subdirectory config/ contains all the configuration header files.
#        for example config/cvmx-config contains the exec/system config,
#        config/global-config contains global config across components,
#        config/comp1-config contains component config for comp1.
#    subdirectory obj/ contains intermediate build and library files.
#

NUM_PROCESSORS = 16
NUM_APP_PROCESSORS = 0

#  default target

MAKE=           make -f Makefile.ssl

default: inicmain 
	cp inicmain tcpinicmain
	mips64-octeon-linux-gnu-strip tcpinicmain

#  standard common Makefile fragment
include $(OCTEON_ROOT)/common.mk

# core masks
CORE_MASKS = -DNUM_PROCESSORS=$(NUM_PROCESSORS) -DNUM_APP_PROCESSORS=$(NUM_APP_PROCESSORS) -DNO_REFRESH

#  global debug setting for compile
#DEBUG_FLAGS = -DOCTEON_DEBUG_LEVEL=5
DEBUG_FLAGS = 

# defined for the driver - should be moved to component/config later
DRIVER_DEFINES = -DOCTEON_ENABLE_CNTQ

INCLUDE_DIRS = -I$(OCTEON_ROOT)/components/driver/core -I$(OCTEON_ROOT)/components/driver/common -I$(OCTEON_ROOT)/components/tcp-offload/common

COMPILE += -Wall -Wa,-a=$@.list -Wno-unused-parameter -O2 -g -fno-strict-aliasing $(DEBUG_FLAGS) $(CORE_MASKS) $(CC_FLAGS) $(INCLUDE_DIRS) $(DRIVER_DEFINES)
COMPILE += -DTEMP_SDK_BUILD_NUMBER=`oct-version | sed -n "s/.* build \(.*\)/\1/p"`

GCC_VER = $(shell $(CC) --version | grep GCC)
SDK_VER = `oct-version`

COMPILE += -DGCC_VERSION=\""$(GCC_VER)\""
COMPILE += -DSDK_VERSION=\""$(SDK_VER)\""

#  include needed component Makefile fragments

dir := $(OCTEON_ROOT)/components/common
include $(dir)/common.mk

dir := $(OCTEON_ROOT)/components/driver/core
include $(dir)/core-drv-cntq.mk

dir := $(OCTEON_ROOT)/components/socket
include $(dir)/socket.mk

dir := $(OCTEON_ROOT)/components/tcp
include $(dir)/tcp.mk

dir := $(OCTEON_ROOT)/components/udp
include $(dir)/udp.mk

dir := $(OCTEON_ROOT)/components/ip
include $(dir)/ip.mk

dir := $(OCTEON_ROOT)/components/enet
include $(dir)/enet.mk

dir := $(OCTEON_ROOT)/executive
include $(dir)/cvmx.mk

#  application specification

TARGET        =  inicmain

CLI_APP       = $(OBJ_DIR)/app-cli.o

OBJS          =	$(OBJ_DIR)/inicmain.o \
		$(OBJ_DIR)/inicdata.o \
		$(CLI_APP)

CLI_APP_INCLUDE = $(OCTEON_ROOT)/bootloader/u-boot/include/

CFLAGS_LOCAL = -g -O2 -W -Wall -Wno-unused-parameter -I$(CLI_APP_INCLUDE)
CFLAGS_G = -G $(if $(shell $(CC) --version | grep 3.4),5,7)

ifeq (${OCTEON_TARGET},cvmx_n32)
COMPILE += $(CFLAGS_G)
CFLAGS_LOCAL += $(CFLAGS_G)
endif

include $(OCTEON_ROOT)/application.mk


#  clean target

clean:
	rm -f $(TARGET)
	rm -f $(CVMX_CONFIG)
	rm -fr $(OBJ_DIR)

links:
	cd $(OCTEON_ROOT)/components/enet;make clean;make
	cd $(OCTEON_ROOT)/components/ip;make clean;make
	cd $(OCTEON_ROOT)/components/tcp;make clean;make
	cd $(OCTEON_ROOT)/components/udp;make clean;make
	cd $(OCTEON_ROOT)/components/socket;make clean;make
	cd $(OCTEON_ROOT)/components/common;make clean;make
	cd $(OCTEON_ROOT)/components/driver/core;make clean;make
	cd $(OCTEON_ROOT)/apps/iNIC
